services:

  pythonbase:
    build:
      context: ./pythonbase
    container_name: pythonbase
    image: pythonbase
    depends_on:
      linuxbase:
        condition: service_completed_successfully
    ports:
      - "4213:4213"
      
  jupyterbase:
    build:
      context: ./jupyterbase
    container_name: jupyterbase
    image: jupyterbase
    depends_on:
      pythonbase:
        condition: service_started
      pgduckdb:
        condition: service_healthy
    ports:
      - "8888:8888"
  
  pipelinebase:
    build:
      context: ./pipelinebase
    container_name: pipelinebase
    image: pipelinebase
    depends_on:
      pythonbase:
        condition: service_started
      pgduckdb:
        condition: service_healthy
      minio:
        condition: service_started

  linuxbase:
    build:
      context: ./linuxbase
    container_name: linuxbase
    image: linuxbase

  pgduckdb:
    image: pgduckdb/pgduckdb:17-v0.1.0
    container_name: pgduckdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgduckdb_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:9.3.0
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin4@pgadmin.org"
      PGADMIN_DEFAULT_PASSWORD: "password"
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_PREFERENCES_JSON_FILE: "/pgadmin4/preferences.json"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10
    ports:
      - "8080:80"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/preferences.json:/pgadmin4/preferences.json
      - ./pgadmin/pgpass:/pgadmin4/pgpass
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    entrypoint: >
      sh -c "
        echo 'Starting: pgadmin4 setup.' && \
        chmod 600 /pgadmin4/pgpass && \
        chmod 600 /pgadmin4/servers.json && \
        chmod 644 /pgadmin4/preferences.json && \
        /venv/bin/python3 /pgadmin4/setup.py load-servers /pgadmin4/servers.json && \
        echo 'Completed: pgadmin4 setup.' && \
        /entrypoint.sh
      "

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  # cloudbeaver:
  #   image: dbeaver/cloudbeaver:25.0.3
  #   container_name: cloudbeaver
  #   ports:
  #     - "8978:8978"
  #   volumes:
  #     - cloudbeaver-data:/opt/cloudbeaver/workspace
  #     - ./cloudbeaver/conf/.cloudbeaver.auto.conf:/opt/cloudbeaver/conf/.cloudbeaver.auto.conf
  #     - ./cloudbeaver/conf/.cloudbeaver.runtime.conf:/opt/cloudbeaver/workspace/.data/.cloudbeaver.runtime.conf
  #   depends_on:
  #     - pgduckdb

volumes:
  pgduckdb_data:
   driver: local
  data:
   driver: local
  # cloudbeaver-data:
  #   driver: local